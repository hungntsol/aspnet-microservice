version: '3.8'

services:
  # Catalog
  catalog_db:
    image: mongo
    container_name: catalog_db
    ports:
      - "27017:27017"
    restart: always
    volumes:
      - catalog_data:/data/db
    networks:
      - web_services

  catalog_api:
    image: ${DOCKER_REGISTRY-}catalog_api
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    restart: always
    depends_on:
      - catalog_db
    networks:
      - web_services

  # Basket
  basket_db:
    image: redis:alpine
    container_name: basket_db
    restart: always
    ports:
      - "6379:6379"
    networks:
      - web_services

  basket_api:
    image: ${DOCKER_REGISTRY-}basket_api
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile
    restart: always
    depends_on:
      - basket_db
      - rabbitmq
    networks:
      - web_services

  # Discount
  discount_db:
    container_name: discount_db
    image: postgres:alpine
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - discount_data:/var/lib/postgresql/data
    networks:
      - web_services

  pgadmin4:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    depends_on:
      - discount_db
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/root/.pgadmin
    networks:
      - web_services

  discount_api:
    image: ${DOCKER_REGISTRY-}discount_api
    build:
      context: .
      dockerfile: Services/Discount/Discount.API/Dockerfile
    depends_on:
      - discount_db
    networks:
      - web_services

  discount_grpc:
    image: ${DOCKER_REGISTRY-}discount_grpc
    build:
      context: .
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile
    depends_on:
      - discount_db
      - discount_api
    networks:
      - web_services

  # Order
  order_db:
    container_name: order_db
    image: mcr.microsoft.com/mssql/server
    restart: always
    ports:
      - "1433:1433"
    volumes:
      - order_data:/var/lib/mssql/data
    networks:
      - web_services

  order_api:
    image: ${DOCKER_REGISTRY-}order_api
    build:
      context: .
      dockerfile: Services/Order/Order.API/Dockerfile
    depends_on:
      - order-db
      - rabbitmq
    networks:
      - web_services
  
  rabbitmq:
    image: rabbitmq:management-alpine
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - web_services

  api_gateway:
    container_name: api_gateway
    image: ${DOCKER_REGISTRY-}api-gateway
    build:
      context: .
      dockerfile: ApiGateways/ApiGateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
    depends_on: 
      - catalog_api
      - basket_api
      - discount_api
      - order_api
    ports:
      - "6100:80"
    networks:
      - web_services

  api_aggregator:
    container_name: api_aggregator
    image: ${DOCKER_REGISTRY-}api_aggregator
    build:
      context: .
      dockerfile: ApiGateways/Shopping.Aggregator/Dockerfile
    environment:
        - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
        - ApiSettings:CatalogUrl=http://catalog-api
        - ApiSettings:BasketUrl=http://basket-api
        - ApiSettings:OrderUrl=http://order-api
    depends_on: 
      - api_gateway
      - basket_api
      - discount_api
      - order_api
      - catalog_api
    ports:
        - "6110:80"
    networks:
      - web_services

networks:
  web_services:

volumes:
  catalog_data:
  discount_data:
  pgadmin_data:
  order_data: