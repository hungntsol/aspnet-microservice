version: '3.8'

services:
  catalog.db:
    image: mongo
    container_name: catalog.db
    ports:
      - "27017:27017"
    restart: always
    volumes:
      - catalog_data:/data/db
    networks:
      - aspnet_micro

  catalog.api:
    image: ${DOCKER_REGISTRY-}catalog.api
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    restart: always
    depends_on:
      - catalog.db
    networks:
      - aspnet_micro
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MongoSettings:ConnectionString=mongodb://catalog.db:27017
      - MongoSettings:DatabaseName=ShoppingCatalog
      - MongoSettings:CollectionName=catalog
    ports:
      - "5000:80"

  basket.db:
    image: redis:alpine
    container_name: basket.db
    restart: always
    ports:
      - "6379:6379"
    networks:
      - aspnet_micro

  basket.api:
    image: ${DOCKER_REGISTRY-}basket.api
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile
    restart: always
    depends_on:
      - basket.db
      - rabbitmq
    networks:
      - aspnet_micro
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RedisSettings:ConnectionString=basket.db:6379
      - GrpcSettings:DiscountServiceUrl=http://discount.grpc
      - EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672
    ports:
      - "5010:80"

  discount.db:
    container_name: discount.db
    image: postgres:alpine
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - discount_data:/var/lib/postgresql/data
    networks:
      - aspnet_micro
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=DiscountDb
      - POSTGRES_PORT=5432

  pgadmin4:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    depends_on:
      - discount.db
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/root/.pgadmin
    networks:
      - aspnet_micro
    environment:
      - PGADMIN_DEFAULT_EMAIL=postgres@admin.com
      - PGADMIN_DEFAULT_PASSWORD=postgres

  discount.api:
    image: ${DOCKER_REGISTRY-}discount.api
    build:
      context: .
      dockerfile: Services/Discount/Discount.API/Dockerfile
    depends_on:
      - discount.db
    networks:
      - aspnet_micro
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - PostgresSettings:ConnectionString=Server=discount.db;Port=5432;User Id=postgres;Password=postgres;Database=DiscountDb
    ports:
      - "5020:80"


  discount.grpc:
    image: ${DOCKER_REGISTRY-}discount.grpc
    build:
      context: .
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile
    depends_on:
      - discount.db
      - discount.api
    networks:
      - aspnet_micro
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - PostgresSettings:ConnectionString=Server=discount.db;Port=5432;User Id=postgres;Password=postgres;Database=DiscountDb
    ports:
      - "5120:80"

  order.db:
    container_name: order.db
    image: mcr.microsoft.com/mssql/server
    restart: always
    ports:
      - "1433:1433"
    volumes:
      - order_data:/var/lib/mssql/data
    networks:
      - aspnet_micro
    environment:
      - SA_PASSWORD=Sa123456
      - ACCEPT_EULA=Y

  order.api:
    image: ${DOCKER_REGISTRY-}order.api
    build:
      context: .
      dockerfile: Services/Order/Order.API/Dockerfile
    depends_on:
      - order.db
      - rabbitmq
    networks:
      - aspnet_micro
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MSSQLSettings:ConnectionString=Server=order-db;Database=OrderDb;User Id=sa;Password=Sa123456
      - EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672
    ports:
      - "5030:80"

  
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management-alpine
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - aspnet_micro

  api.gateway:
    container_name: api.gateway
    image: ${DOCKER_REGISTRY-}api.gateway
    build:
      context: .
      dockerfile: ApiGateways/ApiGateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on: 
      - catalog.api
      - basket.api
      - discount.api
      - order.api
    ports:
      - "6100:80"
    networks:
      - aspnet_micro

  shopping.aggregator:
    container_name: shopping.aggregator
    image: ${DOCKER_REGISTRY-}shopping.aggregator
    build:
      context: .
      dockerfile: ApiGateways/Shopping.Aggregator/Dockerfile
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ApiSettings:CatalogUrl=http://catalog.api
        - ApiSettings:BasketUrl=http://basket.api
        - ApiSettings:OrderUrl=http://order.api
    depends_on: 
      - api.gateway
      - basket.api
      - discount.api
      - order.api
      - catalog.api
    ports:
        - "6110:80"
    networks:
      - aspnet_micro

networks:
  aspnet_micro:
    name: aspnet_micro
    driver: bridge

volumes:
  catalog_data:
  discount_data:
  pgadmin_data:
  order_data:

services:
  catalog.db:
    container_name: catalog.db
